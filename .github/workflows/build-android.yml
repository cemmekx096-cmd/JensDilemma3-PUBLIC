name: Build Ren'Py Android APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y openjdk-11-jdk-headless
        sudo apt-get install -y build-essential libssl-dev libffi-dev python3-dev
        pip install --upgrade pip setuptools wheel
        pip install buildozer cython
    
    - name: Download Android SDK
      run: |
        mkdir -p ~/.android
        cd ~
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
        unzip -q commandlinetools-linux-9477386_latest.zip
        mkdir -p Android/cmdline-tools
        mv cmdline-tools Android/cmdline-tools/latest
        export PATH=$HOME/Android/cmdline-tools/latest/bin:$PATH
        yes | sdkmanager --licenses
        sdkmanager "platforms;android-30" "build-tools;30.0.3" "ndk;21.4.7075529"
        echo "ANDROID_SDK_ROOT=$HOME/Android" >> $GITHUB_ENV
        echo "ANDROID_NDK_ROOT=$HOME/Android/ndk/21.4.7075529" >> $GITHUB_ENV
    
    - name: Generate dummy assets (optional)
      continue-on-error: true
      run: |
        python3 generate_dummies.py 2>/dev/null || true
    
    - name: Build APK with Buildozer
      run: |
        cd ${{ github.workspace }}
        export PATH=$HOME/Android/cmdline-tools/latest/bin:$PATH
        export ANDROID_SDK_ROOT=$HOME/Android
        export ANDROID_NDK_ROOT=$HOME/Android/ndk/21.4.7075529
        
        echo "=== Building APK ==="
        buildozer android release 2>&1 | tee build.log
    
    - name: Check for APK
      if: always()
      run: |
        echo "=== Searching for APK ==="
        find ${{ github.workspace }} -name "*.apk" -type f 2>/dev/null || echo "No APK found"
        
        echo -e "\n=== Checking bin folder ==="
        ls -lah ${{ github.workspace }}/bin/ 2>/dev/null || echo "No bin folder"
        
        echo -e "\n=== Last 50 lines of build log ==="
        tail -50 ${{ github.workspace }}/build.log 2>/dev/null || echo "No build.log"
    
    - name: Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: JensDilemma-Android
        path: ${{ github.workspace }}/bin/*.apk
        if-no-files-found: warn
        retention-days: 30
